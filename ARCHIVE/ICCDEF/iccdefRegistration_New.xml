<?xml version="1.0" encoding="utf-8" ?>
<executable>
  <category>Registration</category>
  <title>ICCDEF Registration</title>

  <description>
    This program finds a deformation field to warp a moving image onto a fixed image.  The images must be of the same signal kind, and contain an image of the same kind of object.  This program uses the Thirion Demons warp software in ITK, the Insight Toolkit.
  </description>
  <version>4.8.0</version>
  <documentation-url></documentation-url>
  <license>NEED TO ADD</license>
  <contributor>This tool was developed by Hans Johnson and Greg Harris.</contributor>

  <parameters>
    <label>Input Image Files</label>
    <description>Parameters for specifying the Thirion registration image set</description>

    <image>
      <name>movingVolume</name>
      <flag>m</flag>
      <longflag alias="moving_image">movingVolume</longflag>
      <description>Required: input moving image</description>
      <label>Moving Image Volume</label>
      <channel>input</channel>
    </image>

    <image>
      <name>fixedVolume</name>
      <flag>f</flag>
      <longflag alias="fixed_image">fixedVolume</longflag>
      <description>Required: input fixed target image</description>
      <label>Fixed Image Volume</label>
      <channel>input</channel>
    </image>
  </parameters>

  <parameters>
    <label>Output Files</label>
    <description>Output locations to store files</description>
    <image>
      <name>outputPrefix</name>
      <flag>o</flag>
      <longflag alias="output_Prefix">outputVolume</longflag>
      <description>Required: output prefix is appended to the outputDirectory (IT SHOULD NOT START WITH A full path!).</description>
      <label>Output Prefix</label>
      <channel>output</channel>
    </image>

    <image>
      <name>outputDirectory</name>
      <longflag>outputDirectory</longflag>
      <description>Output Directory must exists prior to running the program.</description>
      <label>Output Directory</label>
      <channel>output</channel>
    </image>

    <image>
      <name>outputForwardDisplacementFieldVolume</name>
      <longflag>outputForwardDisplacementFieldVolume</longflag>
      <description>output forward deformation field vector image.</description>
      <label>Output forward Deformation Field Volume</label>
      <channel>output</channel>
    </image>

    <image>
      <name>outputBackwardDisplacementFieldVolume</name>
      <longflag>outputBackwardDisplacementFieldVolume</longflag>
      <description>output backward deformation field vector image.</description>
      <label>Output backward Deformation Field Volume</label>
      <channel>output</channel>
    </image>

  </parameters>

  <parameters>
    <label>ICCDEF Registration Parameters</label>
    <description>Input parameters controlling the ICCDEF Registation</description>
    <double>
      <name>smoothDisplacementFieldSigma</name>
      <flag>s</flag>
      <longflag alias="def_field_sigma">smoothDisplacementFieldSigma</longflag>
      <label>Deformation field smoothing sigma</label>
      <description>A gaussian smoothing value to be applied to the deformation feild/</description>
      <default>1.0</default>
    </double>


    <string-enumeration>
      <name>inputPixelType</name>
      <longflag>inputPixelType</longflag>
      <description>Input Volumes Pixel Type: float|uchar|short|ushort|int</description>
      <label>Type Code for Input Volumes Pixel Type</label>
      <default>float</default>
      <element>float</element>
      <element>uchar</element>
      <element>short</element>
      <element>ushort</element>
      <element>int</element>
      <channel>input</channel>
    </string-enumeration>

    <string-enumeration>
      <name>outputPixelType</name>
      <longflag>outputPixelType</longflag>
      <description>Output Volume Pixel Type: float|uchar|short|ushort|int</description>
      <label>Type Code for Output Volume Pixel Type</label>
      <default>CopyInputPixelType</default>
      <element>CopyInputPixelType</element>
      <element>float</element>
      <element>uchar</element>
      <element>short</element>
      <element>ushort</element>
      <element>int</element>
      <channel>input</channel>
    </string-enumeration>

    <boolean>
      <name>outputDisplacement</name>
      <longflag>outputDisplacement</longflag>
      <description>Flag to indicate whether Displacement Field  for x y and z component images are written</description>
      <label>Displacement Field</label>
      <channel>input</channel>
      <default>0</default>
    </boolean>

    <boolean>
      <name>outputJacobianImage</name>
      <longflag>outputJacobianImage</longflag>
      <description>Flag to indicate whether jacobian images are written</description>
      <label>Jacobian Image</label>
      <channel>input</channel>
      <default>0</default>
    </boolean>

    <boolean>
      <name>outputDisplacementField</name>
      <longflag>outputDisplacementField</longflag>
      <description>Flag to indicate whether deformation field  are written</description>
      <label>Deformation Filed</label>
      <channel>input</channel>
      <default>0</default>
    </boolean>


    <boolean>
      <name>forceCoronalZeroOrigin</name>
      <longflag>forceCoronalZeroOrigin</longflag>
      <description>Flag to indicate that all images being read in must have their spatial centers matched.</description>
      <label>Center Volumes</label>
      <default>0</default>
      <channel>input</channel>
    </boolean>

    <boolean>
      <name>outputDebug</name>
      <flag>v</flag>
      <longflag>outputDebug</longflag>
      <description>Flag to write the images after each step</description>
      <label>Write Intermediate Images</label>
      <default>0</default>
      <channel>input</channel>
    </boolean>

    <integer>
      <name>backgroundFillValue</name>
      <longflag>backgroundFillValue</longflag>
      <description>Replacement value to overwrite background when performing BOBF</description>
      <label>BOBF Background Replacement Value</label>
      <default>35</default>
      <channel>input</channel>
    </integer>

    <integer-vector>
      <name>medianFilterSize</name>
      <longflag>medianFilterSize</longflag>
      <description>Median filter radius in all 3 directions</description>
      <label>Median Filter Size</label>
      <default>1,1,1</default>
      <channel>input</channel>
    </integer-vector>

   <string-enumeration>
      <name>maskProcessingMode</name>
      <longflag>maskProcessingMode</longflag>
      <description>What mode to use for using the masks: NOMASK|BOBF.  Brain Only Background Fill uses the masks to pre-process the input images by clipping and filling in the background with a predefined value.</description>
      <label>Mask Processing Mode</label>
      <default>NOMASK</default>
      <element>NOMASK</element>
      <element>BOBF</element>:
    </string-enumeration>

    <file>
      <name>fixedBinaryVolume</name>
      <longflag>fixedBinaryVolume</longflag>
      <description>Mask filename for desired region of interest in the Fixed image.</description>
      <label>Input Fixed Mask Filename</label>
      <channel>input</channel>
    </file>

    <file>
      <name>movingBinaryVolume</name>
      <longflag>movingBinaryVolume</longflag>
      <description>Mask filename for desired region of interest in the Moving image.</description>
      <label>Input Moving Mask Filename</label>
      <channel>input</channel>
    </file>

    <file>
      <name>fixedLandmark</name>
      <longflag>fixedLandmark</longflag>
      <description>landmark filename for the Fixed image.</description>
      <label>Input Fixed landmark Filename</label>
      <channel>input</channel>
    </file>

    <file>
      <name>movingLandmark</name>
      <longflag>movingLandmark</longflag>
      <description>Landmark filename for the Moving image.</description>
      <label>Input Moving Landmark Filename</label>
      <channel>input</channel>
    </file>

<!--
    <integer>
      <name>lowerThresholdForBOBF</name>
      <longflag>lowerThresholdForBOBF</longflag>
      <description>Lower threshold for performing BOBF</description>
      <label>BOBF Lower Threshold</label>
      <default>0</default>
      <channel>input</channel>
    </integer>

    <integer>
      <name>upperThresholdForBOBF</name>
      <longflag>upperThresholdForBOBF</longflag>
      <description>Upper threshold for performing BOBF</description>
      <label>BOBF Upper Threshold</label>
      <default>70</default>
      <channel>input</channel>
    </integer>

    <integer-vector>
      <name>seedForBOBF</name>
      <longflag>seedForBOBF</longflag>
      <description>coordinates in all 3 directions for Seed when performing BOBF</description>
      <label>Seed For BOBF</label>
      <default>0,0,0</default>
      <channel>input</channel>
    </integer-vector>

    <integer-vector>
      <name>neighborhoodForBOBF</name>
      <longflag>neighborhoodForBOBF</longflag>
      <description>neighborhood in all 3 directions to be included when performing BOBF</description>
      <label>Seed For BOBF</label>
      <default>1,1,1</default>
      <channel>input</channel>
    </integer-vector>
-->

    <image>
      <name>initialMovingDisplacementFieldVolume</name>
      <longflag>initialMovingDisplacementFieldVolume</longflag>
      <description>Initial deformation field vector image file name for moving image</description>
      <label>Initial Moving Deformation Field Volume</label>
      <channel>input</channel>
    </image>

    <image>
      <name>initialFixedDisplacementFieldVolume</name>
      <longflag>initialFixedDisplacementFieldVolume</longflag>
      <description>Initial deformation field vector image file name for fixed image</description>
      <label>Initial Fixed Deformation Field Volume</label>
      <channel>input</channel>
    </image>

  <file>
      <name>initializeWithTransform</name>
      <longflag>initializeWithTransform</longflag>
      <description>Initial Transform filename</description>
      <label>Initial Transform  Filename</label>
      <channel>input</channel>
    </file>
    <integer>
      <name>numberOfHistogramBins</name>
      <longflag>numberOfHistogramBins</longflag>
      <description>the number of histogram levels</description>
      <label>Number of Histogram Bins</label>
      <default>256</default>
    </integer>
    <integer>
      <name>numberOfMatchPoints</name>
      <longflag>numberOfMatchPoints</longflag>
      <description>the number of match points</description>
      <label>Number of Match Points</label>
      <default>2</default>
    </integer>
    <integer>
      <name>numberOfPyramidLevels</name>
      <flag>n</flag>
      <longflag alias="num_levels">numberOfPyramidLevels</longflag>
      <description>the number of pyramid levels</description>
      <label>Number of Pyramid Levels</label>
      <default>3</default>
    </integer>
    <integer-vector>
      <name>arrayOfPyramidLevelIterations</name>
      <flag>i</flag>
      <longflag alias="number_iterations">arrayOfPyramidLevelIterations</longflag>
      <description>the iterations for each pyramid level</description>
      <label>the iteration count for each pyramid level</label>
      <default>100,50,10</default>
    </integer-vector>
    <double>
       <name>maxStepLength</name>
       <flag>l</flag>
       <longflag>max_step_length</longflag>
       <description>Maximum length of an update vector (0: no restriction)</description>
       <label>Max Step Length</label>
       <default>0.00001</default>
    </double>
    <boolean>
       <name>normalization</name>
       <flag>e</flag>
       <longflag>use_histogram_matching</longflag>
       <description>Intensity Normalization</description>
       <label>Intensity Normalization</label>
       <default>false</default>
    </boolean>

    <boolean>
       <name>useConsistentIntensity</name>
       <longflag>useConsistentIntensity</longflag>
       <description>Choose consistent Intensity registration algorithm</description>
       <label>Consistent intensity registration</label>
       <default>false</default>
    </boolean>

    <boolean>
       <name>useConsistentLandmark</name>
       <longflag>useConsistentLandmark</longflag>
       <description>Choose consistent landmark registration algorithm</description>
       <label>Consistent landmark registration</label>
       <default>false</default>
    </boolean>
     <double>
       <name>similarityWeight</name>
       <longflag>similarityWeight</longflag>
       <description>the weight of similarity cost</description>
       <label>The Weight of Similarity</label>
       <default>1</default>
    </double>


    <double>
       <name>regularizationWeight</name>
       <longflag>regularizationWeight</longflag>
       <description>the weight of regularization cost</description>
       <label>The Weight of Regularization</label>
       <default>50</default>
    </double>

    <double>
       <name>inverseWeight</name>
       <longflag>inverseWeight</longflag>
       <description>the weight of inverse constitency</description>
       <label>The Weight of Inverse consistency</label>
       <default>50.0</default>
    </double>

    <double>
       <name>landmarkWeight</name>
       <longflag>landmarkWeight</longflag>
       <description>the weight of inverse constitency</description>
       <label>The Weight of Inverse consistency</label>
       <default>50.0</default>
    </double>

    <double>
       <name>min_Jacobian_value</name>
       <longflag>jacobian</longflag>
       <description>the minimum Jacobian value</description>
       <label>Minimum Jacobian Value Allowed</label>
       <default>0.15</default>
    </double>

    <double>
       <name>harmonic_percent</name>
       <longflag>harmonic_percent</longflag>
       <description>Butter worth filter harmonic percentage</description>
       <label>Butterworth harmonic percentage</label>
       <default>60</default>
    </double>

    <boolean>
      <name>UseDebugImageViewer</name>
      <flag>G</flag>
      <longflag>--gui</longflag>
      <description>Display intermediate image volumes for debugging</description>
      <default>false</default>
    </boolean>

    <boolean>
      <name>PromptAfterImageSend</name>
      <flag>p</flag>
      <longflag>--promptUser</longflag>
      <description>Prompt the user to hit enter each time an image is sent to the DebugImageViewer</description>
      <default>false</default>
    </boolean>

  </parameters>
</executable>
