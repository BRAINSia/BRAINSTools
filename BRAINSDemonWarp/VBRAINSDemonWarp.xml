<?xml version="1.0" encoding="utf-8"?>
<executable>
  <category>Registration.Specialized</category>
  <title>Vector Demon Registration (BRAINS)</title>

  <description>
    This program finds a deformation field to warp a moving image onto a fixed image.  The images must be of the same signal kind, and contain an image of the same kind of object.  This program uses the Thirion Demons warp software in ITK, the Insight Toolkit.  Additional information is available at: http://www.nitrc.org/projects/brainsdemonwarp.

  </description>
  <version>5.0.0</version>
  <documentation-url>http://www.slicer.org/slicerWiki/index.php/Documentation/4.1/Modules/BRAINSDemonWarp</documentation-url>
  <license>https://www.nitrc.org/svn/brains/BuildScripts/trunk/License.txt</license>
  <contributor>This tool was developed by Hans J. Johnson and Greg Harris.</contributor>
  <acknowledgements>The development of this tool was supported by funding from grants NS050568 and NS40068 from the National Institute of Neurological Disorders and Stroke and grants MH31593, MH40856, from the National Institute of Mental Health.  </acknowledgements>

  <parameters>
    <label>Inputs</label>
    <description>Common input parameters.  All must be specified</description>

    <image multiple="true">
      <name>movingVolume</name>
      <flag>m</flag>
      <longflag alias="moving_image">movingVolume</longflag>
      <description>Required: input moving image</description>
      <label>Moving Image Volume</label>
      <channel>input</channel>
    </image>

    <image multiple="true">
      <name>fixedVolume</name>
      <flag>f</flag>
      <longflag alias="fixed_image">fixedVolume</longflag>
      <description>Required: input fixed (target) image</description>
      <label>Fixed Image Volume</label>
      <channel>input</channel>
    </image>

    <string-enumeration>
      <name>inputPixelType</name>
      <longflag>inputPixelType</longflag>
      <description>Input volumes will be typecast to this format: float|short|ushort|int|uchar</description>
      <label>Input Type</label>
      <default>float</default>
      <element>float</element>
      <element>short</element>
      <element>ushort</element>
      <element>int</element>
      <element>uchar</element>
      <channel>input</channel>
    </string-enumeration>

  </parameters>

  <parameters>
    <label>Outputs</label>
    <description>Common output parameters.  At least one must be specified.</description>
    <image>
      <name>outputVolume</name>
      <flag>o</flag>
      <longflag alias="output_image">outputVolume</longflag>
      <description>Required: output resampled moving image (will have the same physical space as the fixedVolume).</description>
      <label>Output Image Volume</label>
      <channel>output</channel>
    </image>

    <transform fileExtensions=".nrrd" type="nonlinear" reference="movingVolume">
      <name>outputDisplacementFieldVolume</name>
      <flag>O</flag>
      <longflag deprecatedalias="output_field,outputDeformationFieldVolume">outputDisplacementFieldVolume</longflag>
      <description>Output deformation field vector image (will have the same physical space as the fixedVolume).</description>
      <label>Output Displacement Field Volume</label>
      <channel>output</channel>
    </transform>

    <string-enumeration>
      <name>outputPixelType</name>
      <longflag>outputPixelType</longflag>
      <description>outputVolume will be typecast to this format: float|short|ushort|int|uchar</description>
      <label>Output Type</label>
      <default>float</default>
      <element>float</element>
      <element>short</element>
      <element>ushort</element>
      <element>int</element>
      <element>uchar</element>
      <channel>input</channel>
    </string-enumeration>

  <string-enumeration>
      <name>interpolationMode</name>
      <longflag>interpolationMode</longflag>
      <label>Interpolation Mode</label>
      <description>Type of interpolation to be used when applying transform to moving volume.  Options are Linear, ResampleInPlace, NearestNeighbor, BSpline, or WindowedSinc</description>
      <default>Linear</default>
      <element>NearestNeighbor</element>
      <element>Linear</element>
      <element>ResampleInPlace</element>
      <element>BSpline</element>
      <element>WindowedSinc</element>
      <element>Hamming</element>
      <element>Cosine</element>
      <element>Welch</element>
      <element>Lanczos</element>
      <element>Blackman</element>
    </string-enumeration>
  </parameters>


  <parameters>
    <label>Registration Parameters</label>
    <description>Input parameters controlling the behavior of the demons registration.</description>
    <string-enumeration>
      <name>registrationFilterType</name>
      <longflag>registrationFilterType</longflag>
      <description>Registration Filter Type: Demons|FastSymmetricForces|Diffeomorphic|LogDemons|SymmetricLogDemons</description>
      <label>Registration Filter Type</label>
      <default>Diffeomorphic</default>
      <element>Demons</element>
      <element>FastSymmetricForces</element>
      <element>Diffeomorphic</element>
      <element>LogDemons</element>
      <element>SymmetricLogDemons</element>:
    </string-enumeration>

    <double>
      <name>smoothDisplacementFieldSigma</name>
      <flag>s</flag>
      <longflag alias="def_field_sigma">smoothDisplacementFieldSigma</longflag>
      <label>Displacement field smoothing sigma</label>
      <description>A gaussian smoothing value to be applied to the deformation feild at each iteration.</description>
      <default>1.0</default>
    </double>

    <integer>
      <name>numberOfPyramidLevels</name>
      <flag>n</flag>
      <longflag alias="num_levels">numberOfPyramidLevels</longflag>
      <label>Pyramid Levels</label>
      <description>Number of image pyramid levels to use in the multi-resolution registration.</description>
      <default>5</default>
    </integer>
    <integer-vector>
      <name>minimumFixedPyramid</name>
      <longflag>minimumFixedPyramid</longflag>
      <description>The shrink factor for the first level of the fixed image pyramid. (i.e. start at 1/16 scale, then 1/8, then 1/4, then 1/2, and finally full scale)</description>
      <label>Moving Shrink Factors</label>
      <default>16,16,16</default>
    </integer-vector>
    <integer-vector>
      <name>minimumMovingPyramid</name>
      <longflag>minimumMovingPyramid</longflag>
      <label>Moving Shrink Factors</label>
      <description>The shrink factor for the first level of the moving image pyramid. (i.e. start at 1/16 scale, then 1/8, then 1/4, then 1/2, and finally full scale)</description>
      <default>16,16,16</default>
    </integer-vector>

    <integer-vector>
      <name>arrayOfPyramidLevelIterations</name>
      <flag>i</flag>
      <longflag alias="number_iterations">arrayOfPyramidLevelIterations</longflag>
      <description>The number of iterations for each pyramid level</description>
      <label>the iteration count for each pyramid level</label>
      <default>100,100,100</default>
    </integer-vector>
  </parameters>

  <parameters advanced="true">
  <label> Input image pre-processing options</label>
  <description> Operations to perform on the images before starting the registration. </description>
    <boolean>
       <name>histogramMatch</name>
       <flag>e</flag>
       <longflag alias="use_histogram_matching">histogramMatch</longflag>
       <description>Histogram Match the input images.  This is suitable for images of the same modality that may have different absolute scales, but the same overall intensity profile.</description>
       <label>Histogram Match</label>
       <default>false</default>
    </boolean>
    <integer>
      <name>numberOfHistogramBins</name>
      <longflag>numberOfHistogramBins</longflag>
      <description>The number of histogram levels</description>
      <label>Number of histogram bins to use in histogramMatch</label>
      <default>256</default>
    </integer>

    <integer>
      <name>numberOfMatchPoints</name>
      <longflag>numberOfMatchPoints</longflag>
      <description>The number of match points for histrogramMatch</description>
      <label>Number of Match Points</label>
      <default>2</default>
    </integer>

    <integer-vector>
      <name>medianFilterSize</name>
      <longflag>medianFilterSize</longflag>
      <label>Median Filter Size</label>
      <description>Median filter radius in all 3 directions.  When images have a lot of salt and pepper noise, this step can improve the registration.</description>
      <default>0,0,0</default>
      <channel>input</channel>
    </integer-vector>

    </parameters>

  <parameters advanced="true">
  <label> Displacement field initialziation</label>
  <description> Options for initializing the deformation field. </description>

    <transform fileExtensions=".nrrd" type="nonlinear">
      <name>initializeWithDisplacementField</name>
      <longflag>initializeWithDisplacementField</longflag>
      <description>Initial deformation field vector image file name</description>
      <label>Initial Displacement Field Volume</label>
      <channel>input</channel>
    </transform>

<!--
    <file>
      <name>movingLandmarks</name>
      <longflag>movingLandmarks</longflag>
      <description>Landmarks filename for moving image to initialize deformation field</description>
      <label>Moving Landmarks Filename</label>
      <channel>input</channel>
    </file>

    <file>
      <name>fixedLandmarks</name>
      <longflag>fixedLandmarks</longflag>
      <description>Landmarks filename for fixed (target) image to initialize deformation field</description>
      <label>Fixed Landmarks Filename</label>
      <channel>input</channel>
    </file>

    <transform fileExtensions=".coeff" type="nonlinear">
      <name>initializeWithFourier</name>
      <longflag>initializeWithFourier</longflag>
      <description>Initial Coefficient filename.</description>
      <label>Initial Coefficient Filename</label>
      <channel>input</channel>
    </transform>
    -->

    <transform fileExtensions=".h5,.hdf5,.mat,.txt">
      <name>initializeWithTransform</name>
      <longflag>initializeWithTransform</longflag>
      <description>Initial Transform filename</description>
      <label>Initial Transform  Filename</label>
      <channel>input</channel>
    </transform>
  </parameters>

  <parameters advanced="true">
  <label> Mask Options</label>
  <description> Options for setting binary masks for the registration. </description>
  <!-- This should really be maskProcessingMode -->
    <boolean>
      <name>makeBOBF</name>
      <longflag>makeBOBF</longflag>
      <description>Flag to make Brain-Only Background-Filled versions of the input and target volumes.</description>
      <label>Make BOBF Images</label>
      <default>0</default>
      <channel>input</channel>
    </boolean>

    <image type="label">
      <name>fixedBinaryVolume</name>
      <longflag>fixedBinaryVolume</longflag>
      <description>Mask filename for desired region of interest in the Fixed image.</description>
      <label>Input Fixed Mask Filename</label>
      <channel>input</channel>
    </image>

    <image type="label">
      <name>movingBinaryVolume</name>
      <longflag>movingBinaryVolume</longflag>
      <description>Mask filename for desired region of interest in the Moving image.</description>
      <label>Input Moving Mask Filename</label>
      <channel>input</channel>
    </image>

    <integer>
      <name>lowerThresholdForBOBF</name>
      <longflag>lowerThresholdForBOBF</longflag>
      <description>Lower threshold for performing BOBF</description>
      <label>BOBF Lower Threshold</label>
      <default>0</default>
      <channel>input</channel>
    </integer>

    <integer>
      <name>upperThresholdForBOBF</name>
      <longflag>upperThresholdForBOBF</longflag>
      <description>Upper threshold for performing BOBF</description>
      <label>BOBF Upper Threshold</label>
      <default>70</default>
      <channel>input</channel>
    </integer>

    <integer>
      <name>backgroundFillValue</name>
      <longflag>backgroundFillValue</longflag>
      <description>Replacement value to overwrite background when performing BOBF</description>
      <label>BOBF Background Replacement Value</label>
      <default>0</default>
      <channel>input</channel>
    </integer>

    <integer-vector>
      <name>seedForBOBF</name>
      <longflag>seedForBOBF</longflag>
      <description>coordinates in all 3 directions for Seed when performing BOBF</description>
      <label>Seed For BOBF</label>
      <default>0,0,0</default>
      <channel>input</channel>
    </integer-vector>

    <integer-vector>
      <name>neighborhoodForBOBF</name>
      <longflag>neighborhoodForBOBF</longflag>
      <description>neighborhood in all 3 directions to be included when performing BOBF</description>
      <label>Seed For BOBF</label>
      <default>1,1,1</default>
      <channel>input</channel>
    </integer-vector>


  </parameters>

  <parameters advanced="true">
  <label> Advanced Options</label>
  <description> Uncommon debugging or other advanced options. </description>
    <string>
      <name>outputDisplacementFieldPrefix</name>
      <longflag>outputDisplacementFieldPrefix</longflag>
      <label>Component displacement field prefix</label>
      <description>Displacement field filename prefix for writing separate x, y, and z component images</description>
      <channel>output</channel>
      <default>none</default>
    </string>

    <image>
      <name>outputCheckerboardVolume</name>
      <longflag>outputCheckerboardVolume</longflag>
      <description>Genete a checkerboard image volume between the fixedVolume and the deformed movingVolume.</description>
      <label>Output Checkerboard Volume</label>
      <channel>output</channel>
    </image>

    <integer-vector>
      <name>checkerboardPatternSubdivisions</name>
      <longflag>checkerboardPatternSubdivisions</longflag>
      <description>Number of Checkerboard subdivisions in all 3 directions</description>
      <label>Checkerboard Pattern Subdivisions</label>
      <default>4,4,4</default>
    </integer-vector>

<!-- This flag should be removed
    <boolean>
      <name>forceCoronalZeroOrigin</name>
      <longflag>forceCoronalZeroOrigin</longflag>
      <description>Flag to indicate that all images being read in must have their spatial centers matched.</description>
      <label>Center Volumes</label>
      <default>0</default>
      <channel>input</channel>
    </boolean>
    -->

    <boolean>
      <name>outputNormalized</name>
      <longflag>outputNormalized</longflag>
      <description>Flag to warp and write the normalized images to output.  In normalized images the image values are fit-scaled to be between 0 and the maximum storage type value.</description>
      <label>Warp Normalized Images</label>
      <default>1</default>
    </boolean>

    <boolean>
      <name>outputDebug</name>
      <flag>v</flag>
      <longflag>outputDebug</longflag>
      <description>Flag to write debugging images after each step.</description>
      <label>Write Intermediate Images</label>
      <default>0</default>
    </boolean>

    <float-vector>
      <name>weightFactors</name>
      <flag>w</flag>
      <longflag>weightFactors</longflag>
      <description>Weight fatctors for each input images</description>
      <label>Weight Factors</label>
      <default>0.5,0.5</default>
      <channel>input</channel>
    </float-vector>


    <integer-enumeration>
       <name>gradientType</name>
       <flag>t</flag>
       <longflag>gradient_type</longflag>
       <description>Type of gradient used for computing the demons force (0 is symmetrized, 1 is fixed image, 2 is moving image)</description>
       <default>0</default>
       <label>Gradient Type</label>
       <element>0</element>
       <element>1</element>
       <element>2</element>
     </integer-enumeration>
     <double>
       <name>smoothingUp</name>
       <flag>g</flag>
       <longflag alias="up_field_sigma">upFieldSmoothing</longflag>
       <description>Smoothing sigma for the update field at each iteration</description>
       <label>Update field smoothing</label>
       <default>0.0</default>
    </double>
    <double>
       <name>maxStepLength</name>
       <flag>l</flag>
       <longflag>max_step_length</longflag>
       <description>Maximum length of an update vector (0: no restriction)</description>
       <label>Max Step Length</label>
       <default>2.0</default>
       </double>
    <boolean>
       <name>turnOffDiffeomorph</name>
       <flag>a</flag>
       <longflag>use_vanilla_dem</longflag>
       <description>Run vanilla demons algorithm</description>
       <label>Turn off Diffeomorphism</label>
       <default>false</default>
    </boolean>
    <boolean>
      <name>UseDebugImageViewer</name>
      <flag>G</flag>
      <longflag>gui</longflag>
      <description>Display intermediate image volumes for debugging</description>
      <default>false</default>
    </boolean>
    <boolean>
      <name>PromptAfterImageSend</name>
      <flag>p</flag>
      <longflag>promptUser</longflag>
      <description>Prompt the user to hit enter each time an image is sent to the DebugImageViewer</description>
      <default>false</default>
    </boolean>
    <integer>
      <name>numberOfBCHApproximationTerms</name>
      <longflag>numberOfBCHApproximationTerms</longflag>
      <description>Number of terms in the BCH expansion</description>
      <default>2</default>
    </integer>
    <integer>
      <name>numberOfThreads</name>
      <longflag deprecatedalias="debugNumberOfThreads" >numberOfThreads</longflag>
      <label>Number Of Threads</label>
      <description>Explicitly specify the maximum number of threads to use.</description>
      <default>-1</default>
    </integer>
  </parameters>
</executable>
